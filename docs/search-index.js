var searchIndex = JSON.parse('{\
"mailpot":{"doc":"Mailing list manager library.","t":[8,3,3,8,3,4,16,13,13,13,13,3,13,13,13,13,6,8,4,13,13,13,13,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,10,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,13,13,13,13,13,13,3,4,4,13,3,4,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,0,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChainedError","Configuration","Connection","Context","Error","ErrorKind","ErrorKind","Information","InvalidRequest","Io","Logic","MailtoAddress","Melib","Msg","NotFound","PostRejected","Result","ResultExt","SendMail","SerdeJson","ShellCommand","Smtp","Sql","accept_candidate_member","add_candidate_member","add_list_owner","add_member","address","backtrace","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_err","chain_err","chain_err","chain_err","clone","clone","clone","clone_into","clone_into","clone_into","conf","connection","context","create_list","data_directory","data_path","db_path","db_path","delete_from_error_queue","description","description","description","deserialize","deserialize","deserialize","display_chain","display_chain","error_queue","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_file","from_kind","from_kind","from_kind","insert_post","insert_to_error_queue","into","into","into","into","into","into","iter","iter","iter","kind","kind","kind","list","list_by_id","list_filters","list_member","list_member_by_address","list_members","list_owners","list_policy","list_posts","lists","load_archives","mail","models","months","new","open_db","open_or_create_db","post","provide","remove_list_owner","remove_list_policy","remove_list_policy_panic","remove_membership","request","save_message","save_message_to_path","send_mail","serialize","serialize","serialize","set_list_policy","source","subject","to_owned","to_owned","to_owned","to_string","to_string","to_toml","trusted","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","untrusted","update_list","update_member","with_boxed_chain","with_chain","with_chain","with_chain","with_context","Accept","ConfirmSubscription","ConfirmUnsubscription","Defer","Error","Hold","ListContext","ListRequest","MailJob","Other","Post","PostAction","Reject","RetrieveArchive","RetrieveMessages","Send","SetDigest","StoreDigest","Subscribe","Unsubscribe","action","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone_into","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","list","list_owners","memberships","message_filters","policy","scheduled_jobs","serialize","to","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","description","recipient","recipient","recipients","recipients","reason","reason","AddListHeaders","ArchivedAtLink","FinalizeRecipients","FixCRLF","PostFilter","PostRightsCheck","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","feed","feed","feed","feed","feed","feed","from","from","from","from","from","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","DbVal","ListMembership","ListOwner","MailingList","Post","PostPolicy","address","address","address","address","address","address","address","announce_only","approval_needed","archive_header","archive_url","archive_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changesets","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","datetime","deref","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","display_name","enabled","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hide_address","id","into","into","into","into","into","into","list","list","list","list","message","message_id","month_year","name","name","name","no_subscriptions","pk","pk","pk","pk","pk","pk","post_header","receive_confirmation","receive_duplicates","receive_own_posts","serialize","serialize","serialize","serialize","serialize","serialize","subscribe_mailto","subscriber_only","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe_header","unsubscribe_mailto","ListMembershipChangeset","ListOwnerChangeset","MailingListChangeset","PostPolicyChangeset","address","address","address","announce_only","approval_needed","archive_url","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","description","deserialize","deserialize","deserialize","deserialize","digest","enabled","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hide_address","id","into","into","into","into","list","list","list","name","name","name","pk","pk","pk","receive_confirmation","receive_duplicates","receive_own_posts","serialize","serialize","serialize","serialize","subscriber_only","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["mailpotmailpot::mail","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mailpot::mail::MailJob","","","","","mailpot::mail::PostAction","","mailpot::mail::message_filters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mailpot::models","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mailpot::models::changesets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This trait is implemented on all the errors generated by …","The configuration for the mailpot database and the mail …","A connection to a <code>mailpot</code> database.","Provides the <code>context</code> method for <code>Result</code>.","The Error type.","The kind of an error.","Associated kind type.","An error happened and it was handled internally.","A request was invalid.","Error returned from internal I/O operations.","Error returned from an external user initiated operation …","A <code>mailto:</code> value.","Error returned from e-mail protocol operations from <code>melib</code> …","A convenient variant for String.","An entry was not found in the database.","Post rejected.","Convenient wrapper around <code>std::Result</code>.","Additional methods for <code>Result</code>, for easy interaction with …","How to send e-mail.","Error from deserializing JSON values.","A plain shell command passed to <code>sh -c</code> with the e-mail …","A <code>melib</code> configuration for talking to an SMTP server.","Error returned from sqlite3.","Accept membership candidate.","Create membership candidate.","Add an owner of a mailing list.","Add member to mailing list.","E-mail address.","Returns the backtrace associated with this error.","","Returns the backtrace associated with this error.","","","","","","","","","","","","","Extends the error chain with a new entry.","If the <code>Result</code> is an <code>Err</code> then <code>chain_err</code> evaluates the …","","Extends the error chain with a new entry.","","","","","","","Returns a connection’s configuration.","The <code>rusqlite</code> connection handle.","Wrap the error value with additional context.","Create a new list.","The saved data path.","The directory where data are stored.","The sqlite3 database path.","The location of the sqlite3 file.","Delete error queue entries.","","A short description of the error. This method is identical …","A string describing the error kind.","","","","Returns an object which implements <code>Display</code> for printing …","Returns an object which implements <code>Display</code> for printing …","Fetch all error queue entries.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Deserialize configuration from TOML file.","Constructs an error from a kind, and generates a backtrace.","Constructs an error from a kind, and generates a backtrace.","","Insert a mailing list post into the database.","Insert a received email into the error queue.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over the error chain.","","Iterates over the error chain.","Returns the kind of the error.","","Returns the kind of the error.","Fetch a mailing list by primary key.","Fetch a mailing list by id.","Return the post filters of a mailing list.","Fetch mailing list member.","Fetch mailing list member by their address.","Fetch all members of a mailing list.","Fetch the owners of a mailing list.","Fetch the post policy of a mailing list.","Fetch all posts of a mailing list.","Returns a vector of existing mailing lists.","Loads archive databases from <code>Configuration::data_path</code>, if …","Types for processing new posts: <code>PostFilter</code>, <code>ListContext</code>, …","Database models: <code>MailingList</code>, <code>ListOwner</code>, <code>ListMembership</code>, …","Fetch all year and month values for which at least one …","Create a new configuration value from a given database …","Creates a new database connection.","Create a database if it doesn’t exist and then open it.","Process a new mailing list post.","","Remove an owner of a mailing list.","Remove an existing list policy.","","Remove a member by their address.","Process a new mailing list request.","Save message to the data directory.","Save message to a custom path.","How to send e-mail.","","","","Set the unique post policy for a list.","","Optional subject value.","","","","","","Serialize configuration to a TOML string.","Removes operational limits from this connection. (see …","","","","","","","","","","","","","","","","","","","Sets operational limits for this connection.","Update a mailing list.","Update a mailing list membership.","Construct a chained error from another boxed error and a …","Constructs a chained error from another error and a kind, …","Constructs a chained error from another error and a kind, …","","Wrap the error value with additional context that is …","Accept to mailing list.","Reply with subscription confirmation to submitter.","Reply with unsubscription confirmation to submitter.","Add to <code>deferred</code> queue.","Send error to submitter.","Add to <code>hold</code> queue.","List context passed to a list’s <code>PostFilter</code> stack.","Type of mailing list request.","Scheduled jobs added to a <code>ListContext</code> by a list’s …","Other type of request.","Post to be considered by the list’s <code>PostFilter</code> stack.","Post action returned from a list’s <code>PostFilter</code> stack.","Reject and send rejection response to submitter.","Request reception of list posts from a month-year range, …","Request reception of specific mailing list posts from …","Send post to recipients.","Request change in digest preferences. (See <code>ListMembership</code>)","Store post in digest for recipients.","Request subscription.","Request removal of subscription.","Final action set by each filter in a list’s <code>PostFilter</code> …","","","","","","","","","","","Raw bytes of post.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>From</code> address of post.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Which mailing list a post was addressed to.","The mailing list owners.","The mailing list memberships.","Filters to pass each mailing list post through. Filters …","The mailing list post policy.","The scheduled jobs added by each filter in a list’s …","","<code>To</code> addresses of post.","","","","","","","","","","","","","","","","","","","Human readable description of the error.","The submitter address.","The submitter address.","The post recipients addresses.","The digest recipients addresses.","Human readable reason for rejection.","Human readable reason for deferring.","Add <code>List-*</code> headers","Adds <code>Archived-At</code> field, if configured.","Assuming there are no more changes to be done on the post, …","Ensure message contains only <code>\\\\r\\\\n</code> line terminators, …","Filter that modifies and/or verifies a post candidate. On …","Check that submitter can post to list, for now it accepts …","","","","","","","","","","","Feed post into the filter. Perform modifications to <code>post</code> …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A database entry and its primary key. Derefs to its inner …","A mailing list membership entry.","A mailing list owner entry.","A mailing list entry.","A mailing list post entry.","A mailing list post policy entry.","List address as a <code>melib::Address</code>","Member address as a <code>melib::Address</code>","Owner address as a <code>melib::Address</code>","Mailing list e-mail address.","Member’s e-mail address.","Mailing list owner e-mail address.","<code>From</code> header address of post.","Whether the policy is announce only (Only list owners can …","Whether the policy is “approval needed” (Anyone can …","Value of <code>List-Archive</code> header.","List archive url value.","Mailing list archive URL.","","","","","","","","","","","","","Changeset structs: update specific struct fields.","","","","","","","","","","","","","Custom policy.","Datetime as string.","","Mailing list description.","","","","","","","Whether member wishes to receive list posts as a …","Mailing list display name (e.g. …","Whether this membership is enabled.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether member wishes their e-mail address hidden from …","Mailing list ID (what appears in the subject tag, e.g. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mailing list foreign key (See <code>MailingList</code>).","Mailing list foreign key (See <code>MailingList</code>).","Mailing list foreign key (See <code>MailingList</code>).","Mailing list foreign key (See <code>MailingList</code>).","Post as bytes.","<code>Message-ID</code> header value of post.","Month-year as a <code>YYYY-mm</code> formatted string, for use in …","Mailing list name.","Member’s name, optional.","Mailing list owner name, optional.","Whether the policy is “no subscriptions” (Anyone can …","Primary key.","Database primary key.","Database primary key.","Database primary key.","Database primary key.","Database primary key.","Value of <code>List-Post</code> header.","Whether member wishes to receive a plain confirmation for …","Whether member wishes to receive mailing list post …","Whether member wishes to receive their own mailing list …","","","","","","","List subscribe action as a <code>MailtoAddress</code>.","Whether the policy is “subscriber only” (Only list …","Unix timestamp of date.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of <code>List-Unsubscribe</code> header.","List unsubscribe action as a <code>MailtoAddress</code>.","Changeset struct for <code>ListMembership</code>.","Changeset struct for <code>ListOwner</code>.","Changeset struct for <code>Mailinglist</code>.","Changeset struct for <code>PostPolicy</code>.","Optional new value.","Membership e-mail address.","Optional new value.","Optional new value.","Optional new value.","Optional new value.","","","","","","","","","","","","","","","","","Optional new value.","","","","","Optional new value.","Optional new value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Optional new value.","Optional new value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mailing list foreign key (See <code>MailingList</code>).","Mailing list foreign key (See <code>MailingList</code>).","Mailing list foreign key (See <code>MailingList</code>).","Optional new value.","Optional new value.","Optional new value.","Database primary key.","Database primary key.","Database primary key.","Optional new value.","Optional new value.","Optional new value.","","","","","Optional new value.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,60,19,19,19,19,0,19,19,19,19,0,0,0,19,11,11,19,1,1,1,1,13,60,8,8,1,11,12,8,19,13,1,11,12,8,19,13,60,61,8,8,11,12,13,11,12,13,1,1,62,1,12,12,12,12,1,8,8,19,11,12,13,60,60,1,11,12,8,8,19,19,13,1,11,12,8,8,8,8,8,8,8,8,8,19,19,19,19,13,12,60,8,8,1,1,1,11,12,8,19,13,60,8,8,60,8,8,1,1,1,1,1,1,1,1,1,1,1,0,0,1,12,1,1,1,8,1,1,1,1,1,12,12,12,11,12,13,1,8,13,11,12,13,8,19,12,1,1,11,12,8,19,13,1,11,12,8,19,13,1,11,12,8,19,13,1,1,1,8,60,8,8,62,46,48,48,46,48,46,0,0,0,40,0,0,46,40,40,48,40,48,40,40,45,45,46,47,48,40,45,46,47,48,40,45,40,40,40,40,40,45,46,47,48,40,40,45,46,47,48,40,45,45,46,47,48,40,47,47,47,0,47,47,40,45,40,40,45,46,47,48,40,40,45,46,47,48,40,45,46,47,48,40,63,64,65,66,67,68,69,0,0,0,0,0,0,49,50,51,52,53,49,50,51,52,53,32,49,50,51,52,53,49,50,51,52,53,49,50,51,52,53,49,50,51,52,53,49,50,51,52,53,49,50,51,52,53,0,0,0,0,0,0,15,3,6,15,3,6,35,34,34,15,15,15,4,15,3,34,6,35,4,15,3,34,6,35,0,4,15,3,34,6,35,4,15,3,34,6,35,34,35,4,15,4,15,3,34,6,35,3,15,3,4,15,35,4,15,35,4,4,15,15,3,3,34,34,6,6,35,35,4,15,3,3,34,6,35,3,15,4,15,3,34,6,35,3,34,6,35,35,35,35,15,3,6,34,4,15,3,34,6,35,15,3,3,3,4,15,3,34,6,35,15,34,35,4,15,3,34,6,35,4,15,3,34,6,35,4,15,3,34,6,35,4,15,3,34,6,35,4,15,3,34,6,35,15,15,0,0,0,0,43,44,59,58,58,43,43,44,58,59,43,44,58,59,43,44,58,59,43,44,58,59,43,43,44,58,59,44,44,43,43,44,44,58,58,59,59,43,44,58,59,44,43,43,44,58,59,44,58,59,43,44,59,43,58,59,44,44,44,43,44,58,59,58,43,44,58,59,43,44,58,59,43,44,58,59,43,44,58,59,43,44,58,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[[4,[3]]]]]],[[1,2,3],[[5,[2]]]],[[1,6],[[5,[[4,[6]]]]]],[[1,2,3],[[5,[[4,[3]]]]]],0,[[],7],[8,[[7,[9]]]],[8,[[7,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[8]]]],[8,8],[8,8],[11,11],[12,12],[13,13],[[]],[[]],[[]],[1,12],0,[[],[[10,[14]]]],[[1,15],[[5,[[4,[15]]]]]],[12,16],0,[12,16],0,[[1,[17,[2]]],5],[8,18],[8,18],[19,18],[[],[[10,[11]]]],[[],[[10,[12]]]],[[],[[10,[13]]]],[[],20],[[],20],[1,[[5,[[17,[[4,[21]]]]]]]],[[11,22],23],[[12,22],23],[[8,22],23],[[8,22],23],[[19,22],23],[[19,22],23],[[13,22],23],[[]],[[]],[[]],[24,8],[14,8],[25,8],[[]],[26,8],[27,8],[18,8],[28,8],[19,8],[18,19],[8,19],[[]],[27,19],[[]],[[[29,[16]]],[[5,[12]]]],[[]],[19,8],[[],8],[[1,2,30],[[5,[2]]]],[[1,30,27],[[5,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[8,31],[8,31],[[]],[8],[8,19],[[1,2],[[5,[[4,[15]]]]]],[[1,[29,[18]]],[[5,[[7,[[4,[15]]]]]]]],[[1,4],[[17,[[33,[32]]]]]],[[1,2,2],[[5,[[4,[3]]]]]],[[1,2,18],[[5,[[4,[3]]]]]],[[1,2],[[5,[[17,[[4,[3]]]]]]]],[[1,2],[[5,[[17,[[4,[6]]]]]]]],[[1,2],[[5,[[7,[[4,[34]]]]]]]],[[1,2,7],[[5,[[17,[[4,[35]]]]]]]],[1,[[5,[[17,[[4,[15]]]]]]]],[1,5],0,0,[[1,2],[[5,[[17,[27]]]]]],[[[37,[36]]],12],[12,[[5,[1]]]],[12,[[5,[1]]]],[[1,30,38],5],[39],[[1,2,2],5],[[1,2,2],5],[[]],[[1,2,18],5],[[1,4,40,30],5],[[12,27],[[5,[36]]]],[[12,18,36],[[5,[36]]]],0,[11,10],[12,10],[13,10],[[1,34],[[5,[[4,[34]]]]]],[8,[[7,[41]]]],0,[[]],[[]],[[]],[[],27],[[],27],[12,27],[1,1],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[1,1],[[1,43],5],[[1,44],5],[[[33,[41]]],8],[[]],[[],8],[[],8],[[],[[10,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[40,40],[[]],[[],[[10,[40]]]],[[40,40],38],[[],38],[[45,22],23],[[46,22],23],[[47,22],23],[[48,22],23],[[40,22],23],[[40,22],23],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[40,10],0,[[]],[[],27],[[],10],[[],10],[[],10],[[],10],[[],[[10,[40]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,45,47],10],[[[33,[49]],45,47],10],[[[33,[50]],45,47],10],[[[33,[51]],45,47],10],[[[33,[52]],45,47],10],[[[33,[53]],45,47],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,0,0,0,[15,54],[3,54],[6,54],0,0,0,0,0,0,[15,[[7,[27]]]],[15,[[7,[18]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[4,[55]]],[[4,[55]]]],[15,15],[3,3],[34,34],[6,6],[35,35],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[4],0,[[],[[10,[4]]]],[[],[[10,[15]]]],[[],[[10,[3]]]],[[],[[10,[34]]]],[[],[[10,[6]]]],[[],[[10,[35]]]],0,[15,27],0,[[[4,[56]],4],38],[[15,15],38],[[35,35],38],[[],38],[[],38],[[],38],[[4,22],23],[[[4,[57]],22],23],[[15,22],23],[[15,22],23],[[3,22],23],[[3,22],23],[[34,22],23],[[34,22],23],[[6,22],23],[[6,22],23],[[35,22],23],[[35,22],23],[[]],[[]],[[]],[6,3],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[4,2],0,0,0,0,0,[15,[[7,[27]]]],0,0,0,[4,10],[15,10],[3,10],[34,10],[6,10],[35,10],[15,[[7,[13]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[15,[[7,[27]]]],[15,[[7,[13]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[44,44],[58,58],[59,59],[[]],[[]],[[]],[[]],0,[[],[[10,[43]]]],[[],[[10,[44]]]],[[],[[10,[58]]]],[[],[[10,[59]]]],0,0,[[43,22],23],[[43,22],23],[[44,22],23],[[44,22],23],[[58,22],23],[[58,22],23],[[59,22],23],[[59,22],23],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[43,10],[44,10],[58,10],[59,10],0,[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],42],[[],42],[[],42],[[],42]],"p":[[3,"Connection"],[15,"i64"],[3,"ListMembership"],[3,"DbVal"],[6,"Result"],[3,"ListOwner"],[4,"Option"],[3,"Error"],[6,"Backtrace"],[4,"Result"],[4,"SendMail"],[3,"Configuration"],[3,"MailtoAddress"],[3,"Error"],[3,"MailingList"],[3,"Path"],[3,"Vec"],[15,"str"],[4,"ErrorKind"],[3,"DisplayChain"],[4,"Value"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"String"],[3,"Error"],[8,"AsRef"],[3,"Envelope"],[3,"Iter"],[8,"PostFilter"],[3,"Box"],[3,"PostPolicy"],[3,"Post"],[3,"PathBuf"],[8,"Into"],[15,"bool"],[3,"Demand"],[4,"ListRequest"],[8,"Error"],[3,"TypeId"],[3,"MailingListChangeset"],[3,"ListMembershipChangeset"],[3,"Post"],[4,"PostAction"],[3,"ListContext"],[4,"MailJob"],[3,"PostRightsCheck"],[3,"FixCRLF"],[3,"AddListHeaders"],[3,"ArchivedAtLink"],[3,"FinalizeRecipients"],[4,"Address"],[8,"Clone"],[8,"PartialEq"],[8,"Debug"],[3,"PostPolicyChangeset"],[3,"ListOwnerChangeset"],[8,"ChainedError"],[8,"ResultExt"],[8,"Context"],[13,"Error"],[13,"ConfirmSubscription"],[13,"ConfirmUnsubscription"],[13,"Send"],[13,"StoreDigest"],[13,"Reject"],[13,"Defer"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
